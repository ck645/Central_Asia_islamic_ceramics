library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(tibble)
library(GGally)
library(stats)
library(dendextend)
library(ggtern)
library(RColorBrewer)
setwd("~/GitHub/Central_Asia_islamic_ceramics/Scripts")
setwd("~/GitHub/Central_Asia_islamic_ceramics/Scripts")
shape_values <- c(18, 15, 1, 16, 2, 0, 3, 17, 4, 5, 6)
Group_colors <- c(
"BUK" = "#CC6677", "BUK A" = "#332288", "Outlier" = "#000000",
"NISH" = "#DAA520", "PAY 1" = "#999933", "PAY 2" = "#88CCEE",
"PAY 3" = "#AA4499", "SAMK" = "#882255", "TASH" = "#44AA99",
"TAZ" = "#117733", "unassigned" = "#bbbbbb"
)
## Importing the dataset
paste_database <- rio::import("paste_compositional_data.csv")
head(paste_database)
paste_database$ANID <- as.factor(paste_database$ANID)
paste_database$'Site Name' <- as.factor(paste_database$'Site Name')
paste_database$'NAA Group' <- as.factor(paste_database$'NAA Group')
paste_database$Ware <- as.factor(paste_database$Ware)
paste_database$Date <- as.factor(paste_database$Date)
database_group <- paste_database %>% select(ANID, 'Site Name', 'NAA Group', 'Ware',
Ce, Co, Cr, Cs, Eu, Fe, Hf, Ni, Rb, Sb, Sc,
Sr, Ta, Tb, Th, Zn, As, La, Lu, Nd, Sm, U, Yb,
Al, Ba, Ca, Dy, K, Mn, Na, Ti, V)
elements_Group <- c("Ce", "Co", "Cr", "Cs", "Eu", "Fe", "Hf", "Ni", "Rb", "Sb", "Sc",
"Sr", "Ta", "Tb", "Th", "Zn", "As", "La", "Lu", "Nd", "Sm", "U",
"Yb", "Al", "Ba", "Ca", "Dy", "K", "Mn", "Na", "Ti", "V")
# convert major elements to oxides
oxide_factors <- c(
Na = 1.347970769,
Al = 1.8894415,
K  = 1.204601258,
Ca = 1.399196567,
Fe = 1.429734085,
Ti = 1.668477239
)
database_group <- database_group %>%
mutate(
Na2O  = Na * oxide_factors["Na"] * 1e-4,
Al2O3 = Al * oxide_factors["Al"] * 1e-4,
K2O   = K  * oxide_factors["K"]  * 1e-4,
CaO   = Ca * oxide_factors["Ca"] * 1e-4,
Fe2O3 = Fe * oxide_factors["Fe"] * 1e-4,
TiO2  = Ti * oxide_factors["Ti"] * 1e-4
)
oxide_columns <- c("Na2O", "Al2O3", "K2O", "CaO", "Fe2O3", "TiO2")
all_columns_to_summarise <- c(elements_Group, oxide_columns)
# Compute stats
stats_comp <- database_group %>%
select(ANID, `NAA Group`, all_of(all_columns_to_summarise)) %>%
group_by(`NAA Group`) %>%
summarise(across(
all_of(all_columns_to_summarise),
list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
rsd = ~ifelse(mean(.x, na.rm = TRUE) == 0, NA, sd(.x, na.rm = TRUE) / mean(.x, na.rm = TRUE) * 100)
),
.names = "{.col}_{.fn}"
))
stats_comp
write.csv(stats_comp, "NAA_group_stats.csv", row.names = FALSE)
database_group_subset <- database_group %>%
filter(database_group$'NAA Group' %in% c("BUK", "BUK A", "NISH", "SAMK", "TASH",
"TAZ"))
stats <- database_group_subset %>%
select(ANID, 'NAA Group', all_of(elements_Group))
manova_model <- manova(cbind(Ce, Co, Cr, Cs, Eu, Fe, Hf, Ni, Rb, Sb, Sc,
Sr, Ta, Tb, Th, Zn, As, La, Lu, Nd, Sm, U, Yb,
Al, Ba, Ca, Dy, K, Mn, Na, Ti, V) ~
`NAA Group`, data = stats)
summary(manova_model)
summary(manova_model, test = "Pillai")
summary(manova_model, test = "Wilks")
summary(manova_model, test = "Hotelling-Lawley")
summary(manova_model, test = "Roy")
summary.aov(manova_model)
pairwise_t_test_results <- list()
for (element in elements_Group) {
t_test_result <- pairwise.t.test(stats[[element]], stats$`NAA Group`,
p.adjust.method = "bonferroni")
pairwise_t_test_results[[element]] <- t_test_result
}
pairwise_t_test_results
pairwise_t_test_results[["Al"]]
# Create an empty list to collect results
significant_elements_by_pair <- list()
# Loop through each element's pairwise comparison result
for (element in names(pairwise_t_test_results)) {
p_matrix <- as.matrix(pairwise_t_test_results[[element]]$p.value)
row_names <- rownames(p_matrix)
col_names <- colnames(p_matrix)
# Loop through upper triangle of the matrix to avoid duplicates
for (i in seq_len(nrow(p_matrix))) {
for (j in seq_len(ncol(p_matrix))) {
if (!is.na(p_matrix[i, j]) && p_matrix[i, j] < 0.05) {
pair <- paste(row_names[i], col_names[j], sep = " vs ")
significant_elements_by_pair[[pair]] <- c(significant_elements_by_pair[[pair]], element)
}
}
}
}
# Convert to data frame
library(tibble)
significant_df <- tibble(
Pair = names(significant_elements_by_pair),
Elements = sapply(significant_elements_by_pair, function(x) paste(sort(x), collapse = ", "))
)
# Show the result
print(significant_df)
database_group_sampled <- database_group %>%
filter(database_group$'Site Name' %in% c("Bukhara", "Paykand", "Taraz", "Tashkent"))
ellipse_database_group <- database_group %>%
filter(database_group$'NAA Group' %in% c("BUK", "BUK A", "TASH", "TAZ"))
La_vs_Fe_ellipse <- ggplot(database_group_sampled, aes(x = Fe, y = La, color = `NAA Group`, shape = `NAA Group`)) +
geom_point(size = 2) +
stat_ellipse(data = ellipse_database_group,
aes(x = Fe, y = La, group = `NAA Group`, color = `NAA Group`),
level = 0.90, geom = "path") +
labs(x = "Fe (ppm)", y = "La (ppm)") +
scale_x_log10() +
scale_y_log10() +
scale_color_manual(name = "Compositional Group", values = Group_colors) +
scale_shape_manual(name = "Compositional Group", values = shape_values) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1, linetype = 1),
legend.position = "right"
)
La_vs_Fe_ellipse
# Save PNG file
png(filename = "./Figures/Figure3.png", width = 3600, height = 2400, res=300)
# Save PNG file
png(filename = ".~/GitHub/Central_Asia_islamic_ceramics/Figures/Figure3.png", width = 3600, height = 2400, res=300)
# Save PNG file
png(filename = "~/GitHub/Central_Asia_islamic_ceramics/Figures/Figure3.png", width = 3600, height = 2400, res=300)
plot(La_vs_Fe_ellipse)
dev.off()
