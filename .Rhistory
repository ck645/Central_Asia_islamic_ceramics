scale_shape_manual(name = "Ware", values = c(1, 6, 16, 17, 8, 7)) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal"
)
print(PCComp) + theme(axis.line = element_line(color = "black", linewidth = 1, linetype = 1))
jpeg(filename = "./Figures/Figure9b.jpg", width = 2800, height = 1600, res=300)
print(PCComp) + theme(axis.line = element_line(color = "black", linewidth = 1, linetype = 1))
dev.off()
provenanced_glaze_data <- Comp_Glaze_transparent
provenanced_glaze_data <- provenanced_glaze_data %>%
group_by(Sample, Site, Region, Ware, Provenance) %>%
summarise(
across(all_of(oxide_columns_master), ~ mean(.x, na.rm = TRUE)),
Count = sum(Count, na.rm = TRUE),
.groups = "drop"
)
provenanced_glaze_data$Provenance <- as.factor(provenanced_glaze_data$Provenance)
provenanced_glaze_data <- provenanced_glaze_data %>%
filter(Provenance %in% c("BUK", "TASH", "TAZ - Group 3", "SAMK", "N/A"))
provenanced_glaze_data <- provenanced_glaze_data %>%
filter(Site %in% c("Bukhara", "Tashkent", "Paykend", "Taraz"))
provenanced_glaze_data <- provenanced_glaze_data %>%
filter(Ware %in% c("Slipware - Qarakhanid", "Slipware - Samanid", "Splashed", "Monochrome"))
provenanced_glaze_data_ellipse <- provenanced_glaze_data %>%
filter(Ware %in% c("Splashed"))
recovery_glaze_data <- Comp_Glaze_transparent
recovery_glaze_data <- recovery_glaze_data %>%
group_by(Sample, Site, Region, Ware, Provenance) %>%
summarise(
across(all_of(oxide_columns_master), ~ mean(.x, na.rm = TRUE)),
Count = sum(Count, na.rm = TRUE),
.groups = "drop"
)
recovery_glaze_data$Site <- as.factor(recovery_glaze_data$Site)
recovery_glaze_data <- recovery_glaze_data %>% filter(Site %in% c("Akhsiket", "Dandanakan", "Kuva", "Termez", "Aktobe", "Bektobe",
"Kulan", "Lower Barskhan", "Tamdy", "Taraz", "Laskhar-i Bazar",
"Bust"))
recovery_glaze_data <- recovery_glaze_data %>% filter(!(Provenance %in% c("BUK", "TASH", "TAZ - Group 3", "SAMK", "N/A")))
PbO_alkali <- ggplot() +
geom_point(data = recovery_glaze_data,
aes(x = Na2O+K2O+MgO+CaO, y = PbO, shape = Ware, color = "comparative site"),
size = 3) +
geom_point(data = provenanced_glaze_data,
aes(x = Na2O+K2O+MgO+CaO, y = PbO, shape = Ware, color = Provenance),
size = 3) +
labs(x = "Alkali (Na2O + K2O + MgO + CaO wt%)",
y = "PbO (wt%)") +
coord_cartesian(ylim = c(38,72), xlim = c(0, 8)) +
scale_shape_manual(name = "Ware",
values = c(8,1,2,16,3,4,5,6,8,9,10,11,12,13,14,7,0))  +
scale_color_manual(
name   = " ",
breaks = c("BUK", "SAMK", "TASH", "TAZ - Group 3", "N/A", "comparative site"),
values = c("BUK" = "#CC6677",
"SAMK" = "#882255",
"TASH" = "#44AA99",
"TAZ - Group 3" = "#117733",
"N/A" = "black",
"comparative site" = "gray")) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal") +
guides(color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical"))
PbO_alkali
jpeg(filename = "./Figures/Figure10_a.jpg", width = 2800, height = 1600, res=300)
print(PbO_alkali)
dev.off()
subs <- c("PbO", "MnO", "FeO", "CoO", "CuO", "Cr2O3")
elts <- c("SiO2", "Al2O3", "K2O", "CaO")
elts_norm <- c("SiO2_norm", "Al2O3_norm", "K2O_norm", "CaO_norm")
# Normalization of slip and glaze
Comp_PbO_removed <- comparative_normalized_data %>%
rowwise() %>%
mutate(
total = sum(c_across(all_of(elts)), na.rm = TRUE) + sum(c_across(all_of(subs)), na.rm = TRUE),
denominator = total - sum(c_across(all_of(subs)), na.rm = TRUE),
across(all_of(elts), ~ .x / denominator * 100, .names = "{.col}_norm")
) %>%
ungroup() %>%
select(-total, -denominator)
Comp_Slips_glaze <- Comp_PbO_removed %>%
filter(Component == "Glaze", Glaze_or_slip_color != "Not over slip") %>%
group_by(Sample, Site, Region, Ware, Provenance) %>%
summarise(
across(all_of(elts), ~ mean(.x, na.rm = TRUE), .names = "Raw_{.col}_glaze"),
across(all_of(elts_norm), ~ mean(.x, na.rm = TRUE), .names = "{.col}_glaze"),
Count = sum(Count, na.rm = TRUE),
.groups = "drop"
)
Comparative_slip <- Comp_PbO_removed %>%
filter(Component == "White Slip") %>%
filter(!Glaze_or_slip_color %in% c('Not under glaze')) %>%
select(Sample, Site, Region, Ware, Component, Provenance, Glaze_or_slip_color, all_of(elts)) %>%
group_by(Sample, Site, Region, Ware, Provenance) %>%
summarise(
across(all_of(elts), ~ mean(.x, na.rm = TRUE), .names = "Raw_{.col}_slip"),
.groups = "drop"
)
Comparative_slip_norm <- Comp_PbO_removed %>%
filter(Component == "White Slip") %>%
filter(!Glaze_or_slip_color %in% c('Not under glaze')) %>%
select(Sample, Site, Region, Ware, Component, Provenance, Glaze_or_slip_color, all_of(elts_norm)) %>%
group_by(Sample, Site, Region, Ware, Provenance) %>%
summarise(
# values for slip
across(all_of(elts_norm), ~ mean(.x, na.rm = TRUE), .names = "{.col}_slip"),
.groups = "drop"
)
# Join raw and normalized data for glaze and slip
wide_slip_data <- Comp_Slips_glaze %>%
inner_join(Comparative_slip, by = c("Sample", "Site", "Region", "Ware", "Provenance")) %>%
inner_join(Comparative_slip_norm, by = c("Sample", "Site", "Region", "Ware", "Provenance"))
# Final cleaning
wide_slip_data <- wide_slip_data %>%
mutate(
across(starts_with("SiO2"), as.numeric),
across(starts_with("Al2O3"), as.numeric),
across(starts_with("K2O"), as.numeric),
across(starts_with("CaO"), as.numeric)
)
provenanced_ceramics_data <- wide_slip_data
provenanced_ceramics_data$Provenance <- as.factor(provenanced_ceramics_data$Provenance)
provenanced_ceramics_data <- provenanced_ceramics_data %>%
filter(Provenance %in% c("BUK", "TASH", "TAZ - Group 3", "SAMK"))
provenanced_ceramics_data <- provenanced_ceramics_data %>%
filter(Site %in% c("Bukhara", "Tashkent", "Paykend", "Taraz"))
provenanced_ceramics_data <- provenanced_ceramics_data %>%
filter(Ware %in% c("Slipware - Qarakhanid", "Slipware - Samanid", "Splashed", "Monochrome"))
provenanced_ceramics_data_ellipse <- provenanced_ceramics_data %>%
filter(Provenance %in% c("BUK", "TASH"))
recovery_ceramics_data <- wide_slip_data
recovery_ceramics_data$Site <- as.factor(recovery_ceramics_data$Site)
recovery_ceramics_data <- recovery_ceramics_data %>% filter(Site %in% c("Akhsiket", "Dandanakan", "Kuva", "Termez", "Aktobe", "Bektobe",
"Kulan", "Lower Barskhan", "Tamdy", "Taraz", "Laskhar-i Bazar",
"Bust")| Provenance == "N/A")
recovery_ceramics_data <- recovery_ceramics_data %>% filter(!(Provenance %in% c("BUK", "TASH", "TAZ - Group 3", "SAMK")))
## visualising glaze and slip interactions
combined_plot_Al2O3 <- ggplot() +
geom_point(data = provenanced_ceramics_data, aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze,
color = Provenance, shape = Provenance),
size = 4) +
geom_point(data = recovery_ceramics_data, aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze, color = "comparative site", shape = Site),
size = 2) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
stat_ellipse(data = provenanced_ceramics_data_ellipse,
aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze, group = Provenance, color = Provenance),
level = 0.90, geom = "path") +
labs(x = "White Slip (Al2O3* wt%)",
y = "Glaze (Al2O3* wt%)") +
scale_shape_manual(name = "Provenance/Site", values = c(17, 15, 16, 18, 1,2,3,4,5,6,8,9,10,11,12,13,14,7,0)) +
scale_color_manual(
name   = " ",
breaks = c("BUK", "SAMK", "TASH", "TAZ - Group 3", "comparative site"),
values = c("BUK" = "#CC6677",
"SAMK" = "#882255",
"TASH" = "#44AA99",
"TAZ - Group 3" = "#117733",
"comparative site" = "gray")) +
coord_cartesian(xlim = c(0, 42), ylim = c(0, 42)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal"
)  +
guides(
color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical")
)
print(combined_plot_Al2O3)
jpeg(filename = "./Figures/Figure7a.jpg", width = 2800, height = 1600, res=300)
print(combined_plot_Al2O3)
dev.off()
combined_plot_SiO2 <- ggplot() +
geom_point(data = provenanced_ceramics_data, aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, color = Provenance, shape = Provenance),
size = 4) +
geom_point(data = recovery_ceramics_data, aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, color = "comparative site", shape = Site),
size = 2) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
stat_ellipse(data = provenanced_ceramics_data_ellipse,
aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, group = Provenance, color = Provenance),
level = 0.90, geom = "path") +
labs(x = "White Slip (SiO2* wt%)",
y = "Glaze (SiO2* wt%)") +
scale_shape_manual(name = "Provenance/Site", values = c(17, 15, 16, 18, 1,2,3,4,5,6,8,9,10,11,12,13,14,7,0)) +
scale_color_manual(
name   = " ",
breaks = c("BUK", "SAMK", "TASH", "TAZ - Group 3", "comparative site"),  # desired order
values = c("BUK" = "#CC6677",
"SAMK" = "#882255",
"TASH" = "#44AA99",
"TAZ - Group 3" = "#117733",
"comparative site" = "gray")) +
coord_cartesian(xlim = c(50,100), ylim = c(50,100)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal"
)  +
guides(
color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical")
)
print(combined_plot_SiO2)
jpeg(filename = "./Figures/Figure7b.jpg", width = 2800, height = 1600, res=300)
print(combined_plot_SiO2)
dev.off()
print(combined_plot_Al2O3)
library(rio)
library(dplyr)
library(ggplot2)
library(ggtern)
library(scales)
combined_ternary <- ggtern(data=O_db, aes(x=PbO, y=SiO2, z=alkali, fill=Color, shape=Group)) +
geom_point(size=2.5, stroke = 1, alpha = 1) +
labs(x = "PbO (%)", y = "SiO2 (%)", z= "alkali (%)") +
geom_point(data=O_comp, aes(x=PbO, y=SiO2, z=alkali, fill=Color, shape = "Comparative samples"),
color="black", size=3, stroke=0.5, alpha=0.3) +
scale_fill_manual(
name = "Opaque Glaze Color",
values = c("Yellow" = "maroon", "White" = "grey70", "Ishkor" = "royalblue3")
) +
scale_shape_manual(name = "Paste Compositional Group", values = c(
"BUK A" = 21, "SAMK" = 22, "TASH" = 23, "N/A" = 24,
"Comparative samples" = 25
)) +
guides(
fill  = guide_legend(override.aes = list(shape = 21, color = "black", alpha = 1, stroke = 0.7)),
shape = guide_legend(order = 1),
fill  = guide_legend(order = 2)
) +
theme(
legend.position = "right",
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
tern.panel.background = element_rect(fill = "transparent", color = NA),
tern.plot.background = element_rect(fill = "transparent", color = NA), # ternary plot background
plot.title = element_text(hjust = 0.5),
tern.axis.line.T = linewidth(color = "black", size = 1.2),
tern.axis.line.L = linewidth(color = "black", size = 1.2),
tern.axis.line.R = linewidth(color = "black", size = 1.2),
tern.panel.grid.major.T = element_blank(),
tern.panel.grid.major.L = element_blank(),
tern.panel.grid.major.R = element_blank(),
# Remove minor grid lines
tern.panel.grid.minor.T = element_blank(),
tern.panel.grid.minor.L = element_blank(),
tern.panel.grid.minor.R = element_blank(),
plot.margin = margin(0, 0, 0, 0, "cm")
)
plot(combined_ternary)
jpeg(filename = "./Figures/Figure4.jpg", width = 3600, height = 2400, res=300)
plot(combined_ternary)
dev.off()
## visualising glaze and slip interactions
combined_plot_Al2O3 <- ggplot() +
geom_point(data = provenanced_ceramics_data, aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze,
color = Provenance, shape = Provenance),
size = 4) +
geom_point(data = recovery_ceramics_data, aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze, color = "comparative site", shape = Site),
size = 2) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
stat_ellipse(data = provenanced_ceramics_data_ellipse,
aes(x = Al2O3_norm_slip, y = Al2O3_norm_glaze, group = Provenance, color = Provenance),
level = 0.90, geom = "path") +
labs(x = "White Slip (Al2O3* wt%)",
y = "Glaze (Al2O3* wt%)") +
scale_shape_manual(name = "Provenance/Site", values = c(17, 15, 16, 18, 1,2,3,4,5,6,8,9,10,11,12,13,14,7,0)) +
scale_color_manual(
name   = " ",
breaks = c("BUK", "SAMK", "TASH", "TAZ - Group 3", "comparative site"),
values = c("BUK" = "#CC6677",
"SAMK" = "#882255",
"TASH" = "#44AA99",
"TAZ - Group 3" = "#117733",
"comparative site" = "gray")) +
coord_cartesian(xlim = c(0, 42), ylim = c(0, 42)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal"
)  +
guides(
color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical")
)
print(combined_plot_Al2O3)
jpeg(filename = "./Figures/Figure7a.jpg", width = 2800, height = 1600, res=300)
print(combined_plot_Al2O3)
dev.off()
combined_plot_SiO2 <- ggplot() +
geom_point(data = provenanced_ceramics_data, aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, color = Provenance, shape = Provenance),
size = 4) +
geom_point(data = recovery_ceramics_data, aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, color = "comparative site", shape = Site),
size = 2) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
stat_ellipse(data = provenanced_ceramics_data_ellipse,
aes(x = SiO2_norm_slip, y = SiO2_norm_glaze, group = Provenance, color = Provenance),
level = 0.90, geom = "path") +
labs(x = "White Slip (SiO2* wt%)",
y = "Glaze (SiO2* wt%)") +
scale_shape_manual(name = "Provenance/Site", values = c(17, 15, 16, 18, 1,2,3,4,5,6,8,9,10,11,12,13,14,7,0)) +
scale_color_manual(
name   = " ",
breaks = c("BUK", "SAMK", "TASH", "TAZ - Group 3", "comparative site"),  # desired order
values = c("BUK" = "#CC6677",
"SAMK" = "#882255",
"TASH" = "#44AA99",
"TAZ - Group 3" = "#117733",
"comparative site" = "gray")) +
coord_cartesian(xlim = c(50,100), ylim = c(50,100)) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal"
)  +
guides(
color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical")
)
print(combined_plot_SiO2)
jpeg(filename = "./Figures/Figure7b.jpg", width = 2800, height = 1600, res=300)
print(combined_plot_SiO2)
dev.off()
combined_plot_CaO_Al2O3 <- ggplot() +
geom_point(data = provenanced_ceramics_data,
aes(x = Raw_CaO_slip, y = Raw_Al2O3_slip, color = Ware, shape = Provenance),
size = 4) +
geom_point(data = recovery_ceramics_data,
aes(x = Raw_CaO_slip, y = Raw_Al2O3_slip, color = Ware, shape = Site),
size = 2) +
labs(x = "log(CaO slip (wt%))",
y = "Al2O3 slip (wt%)") +
scale_shape_manual(name = "Provenance/Site",
values = c(17,15,16,18,1,2,3,4,5,6,8,9,10,11,12,13,14,7,0)) +
scale_color_manual(name = "Ware",
values = c("#4DAF4A","#377EB8","#984EA3","#a65628",
"#E41A1C","#999999","#FF7F00","#000000")) +
scale_x_log10(
breaks = c(0.1, 0.2, 0.5, 1, 2, 5, 10),
) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", linewidth = 1),
legend.position = "right",
legend.box = "horizontal") +
guides(color = guide_legend(order = 2, direction = "vertical"),
shape = guide_legend(order = 1, direction = "vertical"))
combined_plot_CaO_Al2O3
jpeg(filename = "./Figures/Figure7c.jpg", width = 2800, height = 1600, res=300)
print(combined_plot_CaO_Al2O3)
dev.off()
citation("rio")
citation("dplyr")
citation("ggplot2")
citation("ggtern")
citation("scales")
sessionInfo()
library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
install.packages(c("rio", "dplyr", "ggplot2", "tidyr", "GGally", "stats"))
install.packages("C:/Users/ck645/Downloads/GGally_2.2.1.tar.gz", repos = NULL, type = "source")
library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
install.packages("C:/Users/ck645/Downloads/GGally_2.2.1.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/ck645/Downloads/GGally_2.2.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/ck645/Downloads/GGally_2.2.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/ck645/Downloads/GGally_2.2.1.tar.gz", repos = NULL, type = "source")
install.packages("GGally")
library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(GGally)
sessionInfo()
ap <- available.packages(repos = "https://cran.r-project.org")
ap["GGally", c("Version","Depends","Imports")]
library(GGally)
install.packages("GGally", repos = "https://cran.r-project.org", dependencies = FALSE)
library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
remotes::install_version("ggstats", version = "0.10.0",
repos = "https://cran.r-project.org", type = "source")
library(rio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(stats)
shape_values <- c(18, 15, 1, 16, 2, 0, 3, 17, 4, 5, 6)
Group_colors <- c(
"BUK" = "#CC6677", "BUK A" = "#332288", "Outlier" = "#000000",
"NISH" = "#DAA520", "PAY 1" = "#999933", "PAY 2" = "#88CCEE",
"PAY 3" = "#AA4499", "SAMK" = "#882255", "TASH" = "#44AA99",
"TAZ - Group 3" = "#117733", "unassigned" = "#bbbbbb"
)
## Importing the dataset
paste_database <- rio::import("./Data/paste_compositional_data.csv")
## Cleaning the dataset
paste_database$ANID <- as.factor(paste_database$ANID)
paste_database$'Site Name' <- as.factor(paste_database$'Site Name')
paste_database$'NAA Group' <- as.factor(paste_database$'NAA Group')
paste_database$Ware <- as.factor(paste_database$Ware)
paste_database$Date <- as.factor(paste_database$Date)
## Paste Group summary statistics
database_group <- paste_database %>% select(ANID, 'Site Name', 'NAA Group', 'Ware',
Ce, Co, Cr, Cs, Eu, Fe, Hf, Ni, Rb, Sb, Sc,
Sr, Ta, Tb, Th, Zn, As, La, Lu, Nd, Sm, U, Yb,
Al, Ba, Ca, Dy, K, Mn, Na, Ti, V)
elements_Group <- c("Ce", "Co", "Cr", "Cs", "Eu", "Fe", "Hf", "Ni", "Rb", "Sb", "Sc",
"Sr", "Ta", "Tb", "Th", "Zn", "As", "La", "Lu", "Nd", "Sm", "U",
"Yb", "Al", "Ba", "Ca", "Dy", "K", "Mn", "Na", "Ti", "V")
# convert major elements to oxides
oxide_factors <- c(
Na = 1.347970769,
Al = 1.8894415,
K  = 1.204601258,
Ca = 1.399196567,
Fe = 1.429734085,
Ti = 1.668477239
)
database_group <- database_group %>%
mutate(
Na2O  = Na * oxide_factors["Na"] * 1e-4,
Al2O3 = Al * oxide_factors["Al"] * 1e-4,
K2O   = K  * oxide_factors["K"]  * 1e-4,
CaO   = Ca * oxide_factors["Ca"] * 1e-4,
Fe2O3 = Fe * oxide_factors["Fe"] * 1e-4,
TiO2  = Ti * oxide_factors["Ti"] * 1e-4
)
oxide_columns <- c("Na2O", "Al2O3", "K2O", "CaO", "Fe2O3", "TiO2")
all_columns_to_summarise <- c(elements_Group, oxide_columns)
# Compute stats
stats_comp <- database_group %>%
select(ANID, `NAA Group`, all_of(all_columns_to_summarise)) %>%
group_by(`NAA Group`) %>%
summarise(across(
all_of(all_columns_to_summarise),
list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
rsd = ~ifelse(mean(.x, na.rm = TRUE) == 0, NA, sd(.x, na.rm = TRUE) / mean(.x, na.rm = TRUE) * 100)
),
.names = "{.col}_{.fn}"
))
stats_comp
write.csv(stats_comp, "./Data/NAA_group_stats.csv", row.names = FALSE)
database_group_subset <- database_group %>%
filter(database_group$'NAA Group' %in% c("BUK", "BUK A", "NISH", "SAMK", "TASH",
"TAZ - Group 3"))
stats <- database_group_subset %>%
select(ANID, 'NAA Group', all_of(elements_Group))
stats_clean <- stats[stats$`NAA Group` != "Outlier" &
stats$`NAA Group` != "PAY 1" &
stats$`NAA Group` != "PAY 2" &
stats$`NAA Group` != "PAY 3" &
stats$`NAA Group` != "unassigned", ]
stats_clean$`NAA Group` <- droplevels(stats_clean$`NAA Group`)
summary(stats_clean$`NAA Group`)
response_vars_clean <- subset(stats_clean, select = c(Ce, Co, Cr, Cs, Eu, Fe, Hf, Rb, Sb, Sc,
Sr, Ta, Tb, Th, Zn, As, La, Lu, Nd, Sm, U, Yb,
Al, Ba, Ca, Dy, K, Mn, Na, Ti, V))
response_vars_matrix_clean <- as.matrix(response_vars_clean)
# MANOVA model
manova_model_clean <- manova(response_vars_matrix_clean ~ `NAA Group`, data = stats_clean)
summary(manova_model_clean)
summary(manova_model_clean, test = "Pillai")
summary(manova_model_clean, test = "Wilks")
summary(manova_model_clean, test = "Hotelling-Lawley")
summary(manova_model_clean, test = "Roy")
summary.aov(manova_model_clean)
pairwise_t_test_results <- list()
for (element in elements_Group) {
t_test_result <- pairwise.t.test(stats[[element]], stats$`NAA Group`,
p.adjust.method = "bonferroni")
pairwise_t_test_results[[element]] <- t_test_result
}
pairwise_t_test_results
sessionInfo()
citation("ggplot2")
citation("GGally")
citation("tidyr")
